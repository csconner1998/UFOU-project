@using Microsoft.AspNetCore.Identity
@model IEnumerable<UFOU.Models.Report>
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "UFO Reports";
}

<h1>UFO Sighting Reports</h1>

<p>
    <a class="btn btn-primary" asp-action="Create" style="font-weight:bold; color:white">Report New UFO Sighting</a>
</p>

@{
    SortedDictionary<int, int> Date = new SortedDictionary<int, int>();
    string dateString = "";
    string datenumberString = "";
    int lowestYear = 0;
    int highestYear = 0;
}
@foreach (var item in Model)
{
    int yearO = item.DateOccurred.Year;
    if (lowestYear == 0)
    {
        lowestYear = yearO;
        highestYear = yearO;
        Date.Add(yearO, 1);
    }
    else if (yearO < lowestYear)
    {
        Date.Add(yearO, 1);
        for (int i = yearO + 1; i < lowestYear; i++)
        {
            Date.Add(i, 0);
        }
        lowestYear = yearO;
    }
    else if (yearO > highestYear)
    {
        Date.Add(yearO, 1);
        for (int i = highestYear + 1; i < yearO; i++)
        {
            Date.Add(i, 0);
        }
        highestYear = yearO;
    }
    else
    {
        Date[yearO] = Date[yearO] + 1;
    }
}
@foreach (KeyValuePair<int, int> item in Date)
{
    dateString += item.Key + " ";
    datenumberString += item.Value + " ";
}
@{
    dateString = dateString.Remove(dateString.Length - 1);
    datenumberString = datenumberString.Remove(datenumberString.Length - 1);
}
<input type="hidden" id="highest" value="@highestYear" />
<input type="hidden" id="lowest" value="@lowestYear" />
<input type="hidden" id="dateinput" value="@dateString" />
<input type="hidden" id="datenumber" value="@datenumberString" />
<div id="myDiv"></div>

<p></p>

<table class="table" style="background-color:white">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateOccurred)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Shape)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            @if (SignInManager.IsSignedIn(User))
            {
                <th></th>
            }
                <th></th>

            </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.DateOccurred)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Shape)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            @if (SignInManager.IsSignedIn(User))
            {
                <td>
                    <div>
                        <button class="btn" style="background-color:#bc8fd1" type='button' onclick="add_favorite(event, @item.ReportId)">
                            Add to Favorites?
                        </button>
                    </div>
                </td>
            }
                <td>
                    <a asp-action="Details" asp-route-id="@item.ReportId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ReportId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <script src="~/js/linegraph.js"></script>
}
